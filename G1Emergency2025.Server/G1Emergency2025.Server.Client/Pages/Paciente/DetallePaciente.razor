@page "/paciente/detalle/{Id:int}"
@using System.Text.Json
@inject IHttpServicio Http
@inject NavigationManager Nav

<h3>Detalle del Paciente</h3>

@if (cargando)
{
    <p>Cargando...</p>
}
else if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}
else if (paciente == null)
{
    <p>No se encontró el paciente.</p>
}
else
{
    <div class="card p-3 shadow-sm rounded-4" style="max-width: 480px;">
        <div class="mb-2"><strong>Nombre:</strong> @paciente.Nombre</div>
        <div class="mb-2"><strong>DNI:</strong> @paciente.DNI</div>
        <div class="mb-2"><strong>Edad:</strong> @paciente.Edad</div>
        <div class="mb-2"><strong>Sexo:</strong> @paciente.Sexo</div>
        <div class="mb-2"><strong>Domicilio:</strong> @paciente.Direccion</div>
        <div class="mb-2"><strong>Obra Social:</strong> @paciente.ObraSocial</div>
    </div>

    <br />
    <button class="btn btn-secondary" @onclick="VolverAEventos">
        ← Volver a Lista de Eventos
    </button>
}

@code {
    [Parameter] public int Id { get; set; }

    private PacienteDetalleView? paciente;
    private string? mensajeError;
    private bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var resp = await Http.Get<JsonElement>($"api/paciente/detalleConPersona/{Id}");
            Console.WriteLine(resp.Respuesta.ToString());
            if (!resp.Error && resp.Respuesta.ValueKind != JsonValueKind.Undefined)
            {
                var datos = resp.Respuesta;

                paciente = new PacienteDetalleView();

                // Id y obra social están en el nivel superior
                if (datos.TryGetProperty("id", out var idElem))
                    paciente.Id = idElem.GetInt32();

                if (datos.TryGetProperty("obraSocial", out var obraElem))
                    paciente.ObraSocial = obraElem.GetString();

                // Persona está anidada
                if (datos.TryGetProperty("persona", out var personaElem))
                {
                    if (personaElem.TryGetProperty("nombre", out var nombreElem))
                        paciente.Nombre = nombreElem.GetString();

                    if (personaElem.TryGetProperty("dni", out var dniElem))
                        paciente.DNI = dniElem.GetString();

                    if (personaElem.TryGetProperty("edad", out var edadElem))
                        paciente.Edad = edadElem.ToString();

                    if (personaElem.TryGetProperty("sexo", out var sexoElem))
                        paciente.Sexo = sexoElem.GetString();

                    if (personaElem.TryGetProperty("direccion", out var dirElem))
                        paciente.Direccion = dirElem.GetString();
                }
            }
            else
            {
                mensajeError = resp.ObtenerError() ?? "No se pudo obtener el paciente.";
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error inesperado: {ex.Message}";
        }
        finally
        {
            cargando = false;
        }
    }

    private void VolverAEventos() => Nav.NavigateTo("/eventos");

    private class PacienteDetalleView
    {
        public int Id { get; set; }
        public string? ObraSocial { get; set; }
        public string? Nombre { get; set; }
        public string? DNI { get; set; }
        public string? Edad { get; set; }
        public string? Sexo { get; set; }
        public string? Direccion { get; set; }
    }
}