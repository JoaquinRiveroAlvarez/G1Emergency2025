@page "/causas/crear"
@inject IHttpServicio http
@inject NavigationManager navHttp

<h3>Crear Nueva Causa</h3>

<EditForm Model="causa" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Codigo</label>
        <div>
            <InputText class="form-control" @bind-Value="@causa.Codigo" />
            <ValidationMessage For="@(() => causa.Codigo)" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>posibleCausa</label>
        <div>
            <InputText class="form-control" @bind-Value="@causa.posibleCausa" />
            <ValidationMessage For="@(() => causa.posibleCausa)" />
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-primary" @onclick="Cancelar">Cancelar</button>
</EditForm>
<br />
<p>@Mensaje</p>


@code {
    private CausaDTO causa = new CausaDTO();
    string Mensaje = "";

    private async Task Grabar()
    {
        var httpResp = await http.Post<CausaDTO, int>("api/causa", causa);
        if (!httpResp.Error)
        {
            navHttp.NavigateTo("/causas");
        }
        else
        {
            Mensaje = httpResp.ObtenerError();
        }
    }

    private void Cancelar()
    {
        navHttp.NavigateTo("/causas");
    }
}
